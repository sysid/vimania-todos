<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="0" skipped="6" tests="119" time="3.808" timestamp="2022-08-10T21:34:54.538490" hostname="LMUCM863949"><testcase classname="tests.test_environment.TestTwbmIntegration" name="test_twbm_not_installed" time="0.002" /><testcase classname="tests.test_environment.TestTwbmIntegration" name="test_twbm_installed" time="0.001" /><testcase classname="tests.test_pattern" name="test_delete_twbm_regexp[[testuri](vm::http://www.test.org)-http://www.test.org]" time="0.001" /><testcase classname="tests.test_pattern" name="test_delete_twbm_regexp[asdf http://www.google.com asdf-http://www.google.com]" time="0.002" /><testcase classname="tests.test_pattern" name="test_delete_twbm_regexp[balaser https://my.net asdf-https://my.net]" time="0.001" /><testcase classname="tests.test_pattern" name="test_delete_twbm_regexp[[testuri](vm::http://www.test.org) adf-http://www.test.org]" time="0.001" /><testcase classname="tests.test_pattern" name="test_delete_twbm_regexp[[testuri](vm::http://www.test.org#adf?asdf&amp;xxxx aaaaaaa-http://www.test.org#adf?asdf&amp;xxxx]" time="0.001" /><testcase classname="tests.test_pattern" name="test_delete_twbm_regexp[[testuri](vm::http://www.test.org)adf-http://www.test.org]" time="0.002" /><testcase classname="tests.db.test_dal" name="test_reset_db" time="0.053" /><testcase classname="tests.db.test_dal" name="test_get_todo_tag" time="0.026" /><testcase classname="tests.db.test_dal" name="test_get_todo_by_id" time="0.027" /><testcase classname="tests.db.test_dal" name="test_get_todo_by_id_non_existing" time="0.025" /><testcase classname="tests.db.test_dal" name="test_get_todo_raw" time="0.029" /><testcase classname="tests.db.test_dal" name="test_get_xxxxx" time="0.030" /><testcase classname="tests.db.test_dal" name="test_get_duplicates" time="0.025" /><testcase classname="tests.db.test_dal" name="test_get_todos" time="0.030" /><testcase classname="tests.db.test_dal" name="test_update_bm" time="0.030" /><testcase classname="tests.db.test_dal" name="test_insert_bm" time="0.029" /><testcase classname="tests.db.test_dal" name="test_delete_todo" time="0.028" /><testcase classname="tests.db.test_dal" name="test_split_tags" time="0.025" /><testcase classname="tests.db.test_dal" name="test_get_related_tags[ccc-result0]" time="0.028" /><testcase classname="tests.db.test_dal" name="test_get_all_tags" time="0.028" /><testcase classname="tests.db.test_dal" name="test_get_todo_parent[9--3-3]" time="0.026" /><testcase classname="tests.db.test_dal" name="test_get_todo_parent[9--2-6]" time="0.029" /><testcase classname="tests.db.test_dal" name="test_get_todo_parent[9--1-8]" time="0.028" /><testcase classname="tests.db.test_dal" name="test_get_todo_parent[9-0-9]" time="0.030" /><testcase classname="tests.db.test_dal" name="test_get_todo_parent[1-0-1]" time="0.027" /><testcase classname="tests.db.test_dal" name="test_get_depth[9--3]" time="0.027" /><testcase classname="tests.db.test_dal" name="test_get_overall_status[3-1]" time="0.028" /><testcase classname="tests.db.test_dal" name="test_get_overall_status[11-4]" time="0.029" /><testcase classname="tests.db.test_dal" name="test_get_overall_status[12-None]" time="0.028" /><testcase classname="tests.db.test_dal" name="test_get_overall_status[999999-None]" time="0.033" /><testcase classname="tests.todos.test_cli.TestSearch" name="test_search_p" time="0.044" /><testcase classname="tests.todos.test_cli.TestSearch" name="test_search" time="0.043" /><testcase classname="tests.todos.test_cli.TestSearch" name="test_search_tags_exact" time="0.070" /><testcase classname="tests.todos.test_cli.TestSearch" name="test_search_tags_exact_none" time="0.042" /><testcase classname="tests.todos.test_cli.TestSearch" name="test_search_tags_exact_invalid" time="0.037" /><testcase classname="tests.todos.test_cli.TestSearch" name="test_search_browser_should_open" time="0.001"><skipped type="pytest.skip" message="Interactive Tests.">/Users/Q187392/dev/vim/vimania-todos/tests/todos/test_cli.py:38: Interactive Tests.</skipped></testcase><testcase classname="tests.todos.test_cli" name="test_upgrade" time="0.001"><skipped type="pytest.skip" message="Notnworking: not allowed operations: fileno()">/Users/Q187392/dev/vim/vimania-todos/tests/todos/test_cli.py:45: Notnworking: not allowed operations: fileno()</skipped></testcase><testcase classname="tests.todos.test_cli" name="test_delete" time="0.001"><skipped type="pytest.skip" message="not implemented yet">/Users/Q187392/dev/vim/vimania-todos/tests/todos/test_cli.py:52: not implemented yet</skipped></testcase><testcase classname="tests.todos.test_cli.TestAddUrl" name="test_add" time="0.001"><skipped type="pytest.skip" message="not implemented yet">/Users/Q187392/dev/vim/vimania-todos/tests/todos/test_cli.py:60: not implemented yet</skipped></testcase><testcase classname="tests.todos.test_cli.TestAddUrl" name="test_add_with_new_tags_yes" time="0.001"><skipped type="pytest.skip" message="not implemented yet">/Users/Q187392/dev/vim/vimania-todos/tests/todos/test_cli.py:67: not implemented yet</skipped></testcase><testcase classname="tests.todos.test_cli.TestAddUrl" name="test_add_with_new_tags_no" time="0.001"><skipped type="pytest.skip" message="not implemented yet">/Users/Q187392/dev/vim/vimania-todos/tests/todos/test_cli.py:84: not implemented yet</skipped></testcase><testcase classname="tests.todos.test_cli.TestTags" name="test_tags" time="0.036" /><testcase classname="tests.todos.test_cli.TestTags" name="test_tags_related" time="0.034" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[- [ ] bla bub ()--%13% [ ] bla bub ()]" time="0.033" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[- [ ] bla bub '()'--%13% [ ] bla bub '()']" time="0.039" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it['- [ ] invalid single quote'-'- [ ] invalid single quote']" time="0.034" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[- [b] xxxx: invalid-- [b] xxxx: invalid]" time="0.030" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[[ ] xxxx: invalid-[ ] xxxx: invalid]" time="0.032" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[- [ ] todoa ends () hiere.--%13% [ ] todoa ends () hiere.]" time="0.037" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[- [x] this is a text describing a task--%13% [x] this is a text describing a task]" time="0.044" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[-%15% [x] this is a non existing task-]" time="0.038" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[- [x] this is a text describing a task %123%--%13% [x] this is a text describing a task %123%]" time="0.034" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[-%123% [d] should be deleted-]" time="0.033" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[- [D] should be deleted-]" time="0.032" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[   - [ ] bla bub ()-   -%13% [ ] bla bub ()]" time="0.031" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it[   - [x] completed task test-   -%13% [x] completed task test]" time="0.032" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_write_and_read[   - [x] completed task test-   -%13% [x] completed task test]" time="0.034" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_hierarchy" time="0.110" /><testcase classname="tests.todos.test_handle_buffer" name="test_handle_it_code_fence" time="0.032" /><testcase classname="tests.todos.test_handle_buffer" name="test_delete_todo_" time="0.030" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_line" time="0.002" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_handle[-%1% [x] todo 1--%1% [x] todo 1]" time="0.031" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_handle[- [x] this is a text describing a task {t:py,todo}--%13% [x] this is a text describing a task {t:py,todo}]" time="0.032" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_handle[-%13% [d] this is a text for deletion-None]" time="0.030" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_handle_update" time="0.037" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_handle_read_update_buffer" time="0.031" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_parse_vim_todo[- [ ] bla bub ()-- [ ] bla bub ()]" time="0.001" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_parse_vim_todo[- [x] this is a text describing a task-- [x] this is a text describing a task]" time="0.001" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_parse_vim_todo[- [x] this is a text describing a task %123%-- [x] this is a text describing a task %123%]" time="0.001" /><testcase classname="tests.todos.test_handle_buffer.TestLine" name="test_parse_vim_todo[-%9% [ ] with tags {t:todo,py}--%9% [ ] with tags {t:todo,py}]" time="0.001" /><testcase classname="tests.todos.test_handle_buffer.TestVimTodo" name="test_status" time="0.001" /><testcase classname="tests.todos.test_handle_buffer.TestVimTodo" name="test_tags" time="0.001" /><testcase classname="tests.todos.test_handler" name="test_parse_todo_str[- [ ] bla blub-0-bla blub]" time="0.002" /><testcase classname="tests.todos.test_handler" name="test_parse_todo_str[- [-] bla blub-1-bla blub]" time="0.001" /><testcase classname="tests.todos.test_handler" name="test_parse_todo_str[- [x] bla blub-2-bla blub]" time="0.002" /><testcase classname="tests.todos.test_handler" name="test_parse_todo_str[- [X] bla blub-2-bla blub]" time="0.001" /><testcase classname="tests.todos.test_handler" name="test_create_invalid_todo_db_inconsistency[- [ ] todo 5-testpath-two active todos already exist, DB inconsistenty]" time="0.004" /><testcase classname="tests.todos.test_handler" name="test_create_todo[- [ ] todo yyy-testpath-new todo]" time="0.029" /><testcase classname="tests.todos.test_todos.TestBookmarks" name="test_search_tags_exact[-None-None-None-None-aaa,bbb-2]" time="0.005" /><testcase classname="tests.todos.test_todos.TestBookmarks" name="test_search_tags_exact[xxxxx-None-None-None-None-None-1]" time="0.004" /><testcase classname="tests.todos.test_todos.TestBookmarks" name="test_search_tags_exact[xxxxx-ccc,vimania,yyy-None-None-None-None-1]" time="0.006" /><testcase classname="tests.todos.test_todos.TestBookmarks" name="test_search_tags_exact[xxxxx-vimania,yyy-None-None-None-None-1]" time="0.004" /><testcase classname="tests.todos.test_todos.TestBookmarks" name="test_search_tags_exact[xxxxx-vimania,yyy-not1,not2-vimania-None-ccc,vimania,yyy-1]" time="0.004" /><testcase classname="tests.todos.test_todos.TestBookmarks" name="test_search_tags_exact[xxxxx-wrong-None-None-None-None-0]" time="0.004" /><testcase classname="tests.todos.test_todos" name="test_parse_tags[tags0-,tag1,tag2,]" time="0.002" /><testcase classname="tests.todos.test_todos" name="test_parse_tags[tags1-,tag1,tag2,]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_parse_tags[tags2-,,]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_check_tags[tags0-result0]" time="0.029" /><testcase classname="tests.todos.test_todos" name="test_check_tags[tags1-result1]" time="0.030" /><testcase classname="tests.todos.test_todos" name="test_check_tags[tags2-result2]" time="0.028" /><testcase classname="tests.todos.test_todos" name="test_check_tags[tags3-result3]" time="0.030" /><testcase classname="tests.todos.test_todos" name="test_match_all_tags[tags0-todo_tags0-True]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_match_all_tags[tags1-todo_tags1-False]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_match_all_tags[tags2-todo_tags2-True]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_match_all_tags[tags3-todo_tags3-False]" time="0.002" /><testcase classname="tests.todos.test_todos" name="test_match_any_tag[tags0-todo_tags0-True]" time="0.002" /><testcase classname="tests.todos.test_todos" name="test_match_any_tag[tags1-todo_tags1-True]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_match_any_tag[tags2-todo_tags2-True]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_match_any_tag[tags3-todo_tags3-False]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_match_all" time="0.026" /><testcase classname="tests.todos.test_todos" name="test_match_any" time="0.029" /><testcase classname="tests.todos.test_todos" name="test_clean_tags[tags0-result0]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_clean_tags[tags1-result1]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_clean_tags[tags2-result2]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_clean_tags[tags3-result3]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_clean_tags[tags4-result4]" time="0.002" /><testcase classname="tests.todos.test_todos" name="test_clean_tags[tags5-result5]" time="0.002" /><testcase classname="tests.todos.test_todos" name="test_clean_tags[tags6-result6]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_clean_tags[tags7-result7]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_match_exact_tags[tags0-todo_tags0-True]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_match_exact_tags[tags1-todo_tags1-True]" time="0.001" /><testcase classname="tests.todos.test_todos" name="test_match_exact_tags[tags2-todo_tags2-False]" time="0.001" /><testcase classname="tests.vim_.test_vimania_manager" name="test_split_path[/home/user/bla-/home/user/bla-]" time="0.002" /><testcase classname="tests.vim_.test_vimania_manager" name="test_split_path[/home/user/bla#foo-/home/user/bla-foo]" time="0.001" /><testcase classname="tests.vim_.test_vimania_manager" name="test_split_path[/home/user/bla.md#foo-/home/user/bla.md-#foo]" time="0.001" /><testcase classname="tests.vim_.test_vimania_manager" name="test_split_path[/home/user/bla.md#foo##blub-/home/user/bla.md-#foo##blub]" time="0.001" /><testcase classname="tests.vim_.test_vimania_manager" name="test_split_path[/home/user/bla.md#foo##blub blank-/home/user/bla.md-#foo##blub blank]" time="0.002" /></testsuite></testsuites>